mp.jwt.verify.publickey.location=/META-INF/public_key.pem
mp.jwt.verify.issuer=EPF
#
mp.messaging.connector.liberty-kafka.bootstrap.servers=localhost:9092
#
mp.messaging.incoming.persistence.connector=liberty-kafka
mp.messaging.incoming.persistence.topic=epf.persistence
mp.messaging.incoming.persistence.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.persistence.value.deserializer=epf.messaging.util.io.ObjectDeserializer
mp.messaging.incoming.persistence.group.id=epf-cache
#
mp.messaging.incoming.persistence-load.connector=liberty-kafka
mp.messaging.incoming.persistence-load.topic=epf.persistence.load
mp.messaging.incoming.persistence-load.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.persistence-load.value.deserializer=epf.messaging.util.io.ObjectDeserializer
mp.messaging.incoming.persistence-load.group.id=epf-cache
#
mp.messaging.incoming.security.connector=liberty-kafka
mp.messaging.incoming.security.topic=epf.security
mp.messaging.incoming.security.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.security.value.deserializer=epf.messaging.util.io.ObjectDeserializer
mp.messaging.incoming.security.group.id=epf-cache