<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>openup</groupId>
        <artifactId>OpenUP-parent</artifactId>
        <version>1.0.0</version>
    </parent>
    <artifactId>EPF-tests</artifactId>
    <name>Eclipse Process Framework Iteration Tests</name>
    <!-- Define variables that will be substituted in server.xml and
         passed to the integration tests -->
    <properties>
        <httpPort>9080</httpPort>
        <httpsPort>9443</httpsPort>
        <!-- Jaeger configuration -->
        <liberty.env.JAEGER_SAMPLER_TYPE>const</liberty.env.JAEGER_SAMPLER_TYPE>
        <liberty.env.JAEGER_SAMPLER_PARAM>1</liberty.env.JAEGER_SAMPLER_PARAM>
        <liberty.env.epf.service.url>https://localhost:9443/service/</liberty.env.epf.service.url>
        <liberty.env.epf.messaging.url>wss://localhost:9443/service/messaging/</liberty.env.epf.messaging.url>
        <liberty.env.epf.registry.url>https://localhost:9443/gateway/registry/</liberty.env.epf.registry.url>
		<liberty.env.epf.webapp.url>https://localhost:9443/webapp/</liberty.env.epf.webapp.url>
		<liberty.env.epf.tests.file.root>target/servers/test/epf.file.root</liberty.env.epf.tests.file.root>
		<liberty.env.webdriver.chrome.driver>chromedriver.exe</liberty.env.webdriver.chrome.driver>
    </properties>
    <dependencies>
		<!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
		<!-- https://mvnrepository.com/artifact/com.hazelcast/hazelcast-all -->
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/javax.cache/cache-api -->
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/javax.websocket/javax.websocket-api -->
		<dependency>
		    <groupId>javax.websocket</groupId>
		    <artifactId>javax.websocket-api</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.eclipse.jetty.websocket/javax-websocket-client-impl -->
		<dependency>
		    <groupId>org.eclipse.jetty.websocket</groupId>
		    <artifactId>javax-websocket-client-impl</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.glassfish/javax.json -->
        <dependency>
		    <groupId>org.glassfish</groupId>
		    <artifactId>javax.json</artifactId>
		    <scope>test</scope>
		</dependency>
        <dependency>
            <groupId>openup</groupId>
            <artifactId>EPF-client</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>openup</groupId>
            <artifactId>EPF-service</artifactId>
            <version>1.0.0</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>openup</groupId>
            <artifactId>EPF-gateway</artifactId>
            <version>1.0.0</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>openup</groupId>
            <artifactId>EPF-webapp</artifactId>
            <version>1.0.0</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-mp-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
        </dependency>
        <dependency>
		    <groupId>org.jboss.weld</groupId>
		    <artifactId>weld-junit4</artifactId>
		</dependency>
        <dependency>
		    <groupId>org.seleniumhq.selenium</groupId>
		    <artifactId>selenium-java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.liferay.faces</groupId>
			<artifactId>com.liferay.faces.bridge.api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.liferay.faces</groupId>
			<artifactId>com.liferay.faces.bridge.impl</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.portlet</groupId>
			<artifactId>portlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.portals.pluto</groupId>
			<artifactId>pluto-container</artifactId>
		</dependency>
    </dependencies>
    <build>
        <!-- Enable resource filtering so that variables in server.xml get substituted -->
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- Prevent surefire from executing integration tests as unit tests -->
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <!-- Pass contextPath and httpPort to the integration tests -->
                    <systemPropertyVariables>
                        <epf.service.url>https://localhost:${httpsPort}/service/</epf.service.url>
                        <epf.registry.url>https://localhost:${httpsPort}/gateway/registry/</epf.registry.url>
                        <epf.messaging.url>wss://localhost:${httpsPort}/service/messaging/</epf.messaging.url>
                        <epf.webapp.url>https://localhost:${httpsPort}/webapp/</epf.webapp.url>
                        <epf.tests.file.root>target/servers/test/epf.file.root</epf.tests.file.root>
                        <webdriver.chrome.driver>chromedriver.exe</webdriver.chrome.driver>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.openliberty.tools</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <executions>
                    <!-- Create server with custom server.xml -->
                    <execution>
                        <id>create-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                        <configuration>
                            <!-- Use server.xml from target/ directory with variables replaced -->
                            <serverXmlFile>${project.build.testOutputDirectory}/wlp/server.xml</serverXmlFile>
                        </configuration>
                    </execution>
                    <!-- Install application in <dependencies/> into apps/ directory -->
                    <execution>
                        <id>install-apps</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                        <configuration>
                            <!-- Drop application into apps/ directory -->
                            <appsDirectory>apps</appsDirectory>
							<copyDependencies>
                                <location>${project.build.directory}/shared/resources/epf/</location>
                                <dependency>
                                    <groupId>com.h2database</groupId>
                                    <artifactId>h2</artifactId>
                                </dependency>
                                <dependency>
                                    <groupId>com.hazelcast</groupId>
                                    <artifactId>hazelcast</artifactId>
                                </dependency>
                                <!--<dependency>
                                    <groupId>javax.cache</groupId>
                                    <artifactId>cache-api</artifactId>
                                </dependency>
								<dependency>
									<groupId>com.liferay.faces</groupId>
									<artifactId>com.liferay.faces.bridge.api</artifactId>
								</dependency>
								<dependency>
									<groupId>com.liferay.faces</groupId>
									<artifactId>com.liferay.faces.bridge.impl</artifactId>
								</dependency>
								<dependency>
									<groupId>javax.portlet</groupId>
									<artifactId>portlet-api</artifactId>
								</dependency>
								<dependency>
									<groupId>org.apache.portals.pluto</groupId>
									<artifactId>pluto-container</artifactId>
								</dependency>-->
                            </copyDependencies>
                        </configuration>
                    </execution>
                    <!-- Start the server -->
                    <execution>
                        <id>start-liberty-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <verifyTimeout>600</verifyTimeout>
                            <serverStartTimeout>600</serverStartTimeout>
                            <applications>EPF-service,EPF-gateway,EPF-webapp</applications>
                        </configuration>
                    </execution>
                    <!-- Stop the server -->
                    <execution>
                        <id>stop-liberty-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <installDirectory>${liberty.install.dir}</installDirectory>
                    <userDirectory>${project.build.directory}</userDirectory>
                    <serverName>test</serverName>
                    <deployPackages>dependencies</deployPackages>
					<verifyTimeout>600</verifyTimeout>
					<serverStartTimeout>600</serverStartTimeout>
					<applications>EPF-service,EPF-gateway,EPF-webapp</applications>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
